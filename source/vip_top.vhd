----------------------------------------------------------------------------------------------------
--  This code is generated by Terasic System Builder
--
--
-- Author : Hichem YOUSSFI
--
-- Date : 05/05/2017 20h00
--
-- Description : VIP Top
--
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
-- LIBRARY
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

----------------------------------------------------------------------------------------------------
-- ENTITY
----------------------------------------------------------------------------------------------------
entity VIP_TOP is
   generic
   (
      ENABLE_BUSWIDTH               : natural := 1
   )
   port
   (
      clk                            : in    std_logic;
      reset_n                        : in    std_logic;
      enable                         : in    std_logic_vector(ENABLE_BUSWIDTH-1 downto 0);
      --
      srce_valid                     : out   std_logic;
      srce_data                      : out   std_logic_vector(31 downto 0);
      srce_channel                   : out   std_logic_vector(7 downto 0);
      srce_error                     : out   std_logic_vector(7 downto 0);
      srce_startofpacket             : out   std_logic;
      srce_endofpacket               : out   std_logic;
      srce_ready                     : in    std_logic;
      sink_valid                     : in    std_logic;
      sink_data                      : in    std_logic_vector(31 downto 0);
      sink_channel                   : in    std_logic_vector(7 downto 0);
      sink_error                     : in    std_logic_vector(7 downto 0);
      sink_startofpacket             : in    std_logic;
      sink_endofpacket               : in    std_logic;
      sink_ready                     : out   std_logic
  );
end entity VIP_TOP;


----------------------------------------------------------------------------------------------------
-- ARCHTITECTURE
----------------------------------------------------------------------------------------------------
architecture structural of VIP_TOP is
----------------------------------------------------------------------------------------------------
-- CONSTANT
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- TYPE
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- COMPONENT
----------------------------------------------------------------------------------------------------
   component VIP0 is
      port
      (
         clk                              : in    std_logic;
         reset_n                          : in    std_logic;
         enable                           : in    std_logic;
         --
         srce_valid                       : out   std_logic;
         srce_data                        : out   std_logic_vector(31 downto 0);
         srce_startofpacket               : out   std_logic;
         srce_endofpacket                 : out   std_logic;
         srce_ready                       : in    std_logic;
         sink_valid                       : in    std_logic;
         sink_data                        : in    std_logic_vector(31 downto 0);
         sink_startofpacket               : in    std_logic;
         sink_endofpacket                 : in    std_logic;
         sink_ready                       : out   std_logic
     );
   end component VIP0;

----------------------------------------------------------------------------------------------------
-- SIGNAL
----------------------------------------------------------------------------------------------------
s_enable                                  : std_logic_vector(ENABLE_BUSWIDTH-1 downto 0);
-- 0
signal s_srce_0_valid                     : std_logic;
signal s_srce_0_data                      : std_logic_vector(31 downto 0);
signal s_srce_0_startofpacket             : std_logic;
signal s_srce_0_endofpacket               : std_logic;
signal s_srce_0_ready                     : std_logic;
signal s_sink_0_valid                     : std_logic;
signal s_sink_0_data                      : std_logic_vector(31 downto 0);
signal s_sink_0_startofpacket             : std_logic;
signal s_sink_0_endofpacket               : std_logic;
signal s_sink_0_ready                     : std_logic

-- -- 1
-- signal s_srce_1_valid                     : std_logic;
-- signal s_srce_1_data                      : std_logic_vector(31 downto 0);
-- signal s_srce_1_startofpacket             : std_logic;
-- signal s_srce_1_endofpacket               : std_logic;
-- signal s_srce_1_ready                     : std_logic;
-- signal s_sink_1_valid                     : std_logic;
-- signal s_sink_1_data                      : std_logic_vector(31 downto 0);
-- signal s_sink_1_startofpacket             : std_logic;
-- signal s_sink_1_endofpacket               : std_logic;
-- signal s_sink_1_ready                     : std_logic


begin
----------------------------------------------------------------------------------------------------
-- Input Assignment
----------------------------------------------------------------------------------------------------
   -- Interconnection : VIP Top -> VIP#0
   s_sink_0_valid                         <= sink_valid;
   s_sink_0_data                          <= sink_data;
   s_sink_0_startofpacket                 <= sink_startofpacket;
   s_sink_0_endofpacket                   <= sink_endofpacket;
   sink_ready                             <= s_sink_0_ready;

   VIP0_inst : VIP0
      port map
      (
         clk                              => clk,
         reset_n                          => reset_n,
         enable                           => s_enable(0),
         -- output datapath
         srce_valid                       => s_srce_0_valid,
         srce_data                        => s_srce_0_data,
         srce_startofpacket               => s_srce_0_startofpacket,
         srce_endofpacket                 => s_srce_0_endofpacket,
         srce_ready                       => s_srce_0_ready,
         -- input datapath
         sink_valid                       => s_sink_0_valid,
         sink_data                        => s_sink_0_data,
         sink_startofpacket               => s_sink_0_startofpacket,
         sink_endofpacket                 => s_sink_0_endofpacket,
         sink_ready                       => s_sink_0_ready
     );

   -- Interconnection : VIP#0 <-> VIP#1
   -- s_sink_1_valid              <= s_srce_0_valid
   -- s_sink_1_data               <= s_srce_0_data
   -- s_sink_1_startofpacket      <= s_srce_0_startofpacket
   -- s_sink_1_endofpacket        <= s_srce_0_endofpacket
   -- s_srce_0_ready              <= s_sink_1_ready
     
   -- VIP1_inst : VIP1
      -- port map
      -- (
         -- clk                              => clk,
         -- reset_n                          => reset_n,
         -- enable                           => s_enable(1),
         -- srce_valid                       => s_srce_1_valid,
         -- srce_data                        => s_srce_1_data,
         -- srce_startofpacket               => s_srce_1_startofpacket,
         -- srce_endofpacket                 => s_srce_1_endofpacket,
         -- srce_ready                       => s_srce_1_ready,
         -- sink_valid                       => s_sink_1_valid,
         -- sink_data                        => s_sink_1_data,
         -- sink_startofpacket               => s_sink_1_startofpacket,
         -- sink_endofpacket                 => s_sink_1_endofpacket,
         -- sink_ready                       => s_sink_1_ready
     -- );

----------------------------------------------------------------------------------------------------
-- Output Assignment
----------------------------------------------------------------------------------------------------
   -- Interconnection : VIP#n (n=0) -> VIP Top  
   s_srce_0_ready         <= srce_ready;
   srce_valid             <= s_srce_0_valid;
   srce_data              <= s_srce_0_data;
   srce_startofpacket     <= s_srce_0_startofpacket;
   srce_endofpacket       <= s_srce_0_endofpacket;
   srce_channel           <= (others => '0');
   srce_error             <= (others => '0');


end architecture structural;